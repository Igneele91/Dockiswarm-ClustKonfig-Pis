
version: '3.7'
services:
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy
    hostname: oauth2-proxy
    volumes:
      - "./oauth2-proxy-nginx.cfg:/oauth2-proxy.cfg"
    networks:
      oauth2-proxy: {}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
  nginx:
    container_name: nginx
    image: nginx:1.18
    ports:
      - 80:80/tcp
    hostname: nginx
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      oauth2-proxy: {}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
networks:
  oauth2-proxy: {}



  version: '3.2'
  services:
    watchtower:
      image: containrrr/watchtower
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      command: --schedule "0 0 */3 * * *" --cleanup --include-stopped
      deploy:
        mode: global
        placement:
          constraints:
            - node.role == manager
      environment:
        - WATCHTOWER_CLEANUP=true
        - WATCHTOWER_INCLUDE_STOPPED=true
    app-monitored-by-watchtower:
      image: myapps/monitored-by-watchtower
      labels:
        - "com.centurylinklabs.watchtower.scope=myscope"
    watchtower-scope:
      image: containrrr/watchtower
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      command: --schedule "0 0 */3 * * *" --scope myscope 
                --cleanup --include-stopped
      deploy:
        mode: global
        placement:
          constraints:
            - node.role == manager
      environment:
        - WATCHTOWER_CLEANUP=true
        - WATCHTOWER_INCLUDE_STOPPED=true
      labels:
        - "com.centurylinklabs.watchtower.scope=myscope"



